{
    "collab_server" : "",
    "contents" : "#' @title dlambda\n#' @description\n#' @author David Salgado\n#' @export\n#'\ndlambda <- function(lambda, nMNO, nReg, fu, fv, flambda, relTol = 1e-4, nSim = 1e3, nStrata = c(1, 1e2), verbose = FALSE){\n\n  if (any(lambda < 0)) stop('lambda must be nonnegative.')\n  if (any(nMNO < 0)) stop('nMNO must be nonnegative.')\n  if (any(nReg < 0)) stop('nReg must be nonnegative.')\n\n  if (verbose) cat(paste0('Generating ', nSim, ' variables u and v in ', paste0(nStrata, collapse = ', '), ' strata...'))\n  uv.DT <- genUV(nSim, nStrata, fu, fv, lambda, nMNO, nReg)\n  if (verbose) cat(' ok.\\n')\n  uv.DT[, alpha := u * v]\n  uv.DT[, beta := (1 - u) * v]\n  if (verbose) cat(paste0('Computing Poisson factors...'))\n  uv.DT[, factorPoisson := exp(-lambda + nMNO * log(lambda) - lfactorial(nMNO))]\n  if (verbose) cat(paste0(' ok.\\n'))\n  if (verbose) cat(paste0('Computing phi factors...'))\n  uv.DT[factorPoisson < .Machine$double.xmin, phiValues := 0]\n  uv.DT[factorPoisson >= .Machine$double.xmin, phiValues := Phi(alpha, beta, lambda, nMNO, nReg, relTol)]\n  uv.DT[, prob := factorPoisson * phiValues]\n  if (verbose) cat(paste0(' ok.\\n'))\n  if (verbose) cat('Computing the integral(s) by Monte Carlo approximations...')\n  integral <- uv.DT[, sum(prob) / nSim, by = c('parID', 'cellID')]\n  setnames(integral, 'V1', 'integral')\n  uv.DT <- uv.DT[, c('cellID', 'parID', 'lambda', 'nMNO', 'nReg'), with = FALSE]\n  setkeyv(uv.DT, c('cellID', 'parID'))\n  uv.DT <- uv.DT[!duplicated(uv.DT, by = key(uv.DT))]\n  integral <- merge(uv.DT, integral, by = c('cellID', 'parID'))\n\n  if (verbose) cat(' ok.\\n')\n\n  if (flambda[[1L]] == 'gamma'){\n\n    integral[, scale := flambda[['scale']]]\n    integral[, shape := flambda[['shape']]]\n    integral[, flambda := dgamma(lambda, scale = scale, shape = shape)]\n    integral[, probLambda := integral * flambda]\n    integral[, scale := NULL]\n    integral[, shape := NULL]\n    integral[, flambda := NULL]\n    return(integral[])\n  }\n\n  #integral[, cellID := NULL]\n  #integral[, parID := NULL]\n\n\n}\n",
    "created" : 1516948870710.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2028800623",
    "id" : "9B94A57B",
    "lastKnownWriteTime" : 1516948884,
    "last_content_update" : 1516948884463,
    "path" : "~/pestim/R/dlambda.R",
    "project_path" : "R/dlambda.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}