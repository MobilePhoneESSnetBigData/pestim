{
    "collab_server" : "",
    "contents" : "#' @title genUV\n#' @description\n#' @author David Salgado\n#' @export\n#'\ngenUV <- function(nSim, nStrata, f1, f2, lambda, nMNO, nReg){\n\n  if (length(nStrata) != 2) stop('nStrata must have length 2.')\n  if (nStrata[1] >= 1 && (nSim %% nStrata[1] != 0)) stop('nSim must be a multiple of the number of strata of variable 1.')\n  if (nStrata[2] >= 1 && (nSim %% nStrata[2] != 0)) stop('nSim must be a multiple of the number of strata of variable 2.')\n  if (nStrata[1] >= 1 && nSim / nStrata[1] < 10) stop('There must be at least 10 points per stratum of variable 1.')\n  if (nStrata[2] >= 1 && nSim / nStrata[2] < 10) stop('There must be at least 10 points per stratum of variable 2.')\n  if (nStrata[1] == 0) nStrata[1] <- 1\n  if (nStrata[2] == 0) nStrata[2] <- 1\n\n  if (!is.list(f1)) stop('f1 must be a list.')\n  if (!is.list(f2)) stop('f2 must be a list.')\n  if (length(nMNO) != length(nReg)) stop('nMNO and nReg must have the same length.')\n\n  nCells <- length(nMNO)\n  nlambdas <- length(lambda)\n  DT <- as.data.table(expand.grid(lambda, nMNO))\n  setnames(DT, c('lambda', 'nMNO'))\n  DT[, cellID := rep(1:nCells, each = nlambdas)]\n  #DT[, lambdaID := rep(1:nlambdas, nCells)]\n  DT[, nReg := rep(nReg, each = nlambdas)]\n  DT[, parID := rep(1:nlambdas, nCells)]\n  setcolorder(DT, c('cellID', 'parID', 'lambda', 'nMNO', 'nReg'))\n\n  if (nStrata[1] > 1 & nStrata[2] > 1) {\n\n    Strat <- DT[, as.list(expand.grid(1:nStrata[1], 1:nStrata[2])), by = c('parID', 'cellID')]\n    setnames(Strat, c('Var1', 'Var2'), c('Stratum_u', 'Stratum_v'))\n    DT <- merge(DT, Strat, by = c('parID', 'cellID'), allow.cartesian = TRUE)\n  }\n\n  if (nStrata[1] > 1 & nStrata[2] <= 1) {\n\n    Strat <- DT[, as.list(expand.grid(1:nStrata[1], 1)), by =  c('parID', 'cellID')]\n    setnames(Strat, c('Var1', 'Var2'), c('Stratum_u', 'Stratum_v'))\n    DT <- merge(DT, Strat, by =  c('parID', 'cellID'), allow.cartesian = TRUE)\n\n  }\n\n  if (nStrata[1] <= 1 & nStrata[2] > 1) {\n\n    Strat <- DT[, as.list(expand.grid(1, 1:nStrata[2])), by =  c('parID', 'cellID')]\n    setnames(Strat, c('Var1', 'Var2'), c('Stratum_u', 'Stratum_v'))\n    DT <- merge(DT, Strat, by =  c('parID', 'cellID'), allow.cartesian = TRUE)\n  }\n\n  if (nStrata[1] <= 1 & nStrata[2] <= 1) {\n\n    Strat <- DT[, as.list(expand.grid(1, 1)), by =  c('parID', 'cellID')]\n    setnames(Strat, c('Var1', 'Var2'), c('Stratum_u', 'Stratum_v'))\n    DT <- merge(DT, Strat, by =  c('parID', 'cellID'), allow.cartesian = TRUE)\n  }\n\n  setcolorder(DT, c('cellID', 'parID', 'nMNO', 'nReg', 'lambda', 'Stratum_u', 'Stratum_v'))\n  setkeyv(DT, c('cellID', 'parID', 'nMNO', 'nReg', 'lambda', 'Stratum_u', 'Stratum_v'))\n\n  if (f1[[1L]] == 'unif') {\n\n    uMin <- f1[['xMin']]\n    if (any(uMin < 0)) stop('The parameters uMin in the distribution f1 cannot be negative.')\n    if (any(uMin >= 1)) stop('The parameters uMin in the distribution f1 cannot be equal to or larger than 1.')\n    if (length(uMin) != 1 & length(uMin) != nCells) stop('The number of parameters uMin in the distribution f1 does not coincide with the number of cells.')\n    if (length(uMin) == nCells) uMin <- rep(uMin, each = dim(DT)[1] / nCells)\n    DT[, uMin := uMin]\n\n    uMax <- f1[['xMax']]\n    if (length(uMax) != 1 & length(uMax) != nCells) stop('The number of parameters uMax in the distribution f2 does not coincide with the number of cells.')\n    if (any(uMax < 0)) stop('The parameters uMax in the distribution f1 cannot be negative.')\n    if (any(uMax >= 1)) stop('The parameters uMax in the distribution f1 cannot be larger than 1.')\n\n    if (length(uMax) == nCells) uMax <- rep(uMax, each = dim(DT)[1] / nCells)\n\n    if (any(uMin >= uMax)) stop('The parameters uMin in the distribution f1 must be lesser than the parameters uMax.')\n\n    DT[, uMax := uMax]\n\n    Strata <- DT[, list(u0 = runif(floor(nSim/prod(nStrata)))), by = c('Stratum_u', 'Stratum_v')]\n    DT <- merge(DT, Strata, by = c('Stratum_u', 'Stratum_v'), allow.cartesian = TRUE)\n    DT[, u := qunif((u0 + Stratum_u - 1) / nStrata[1], uMin, uMax)]\n    DT <- DT[, c('cellID', 'parID', 'nMNO', 'nReg', 'lambda', 'Stratum_u', 'Stratum_v', 'u'), with = FALSE]\n    setcolorder(DT, c('cellID', 'parID', 'nMNO', 'nReg', 'lambda', 'Stratum_u','Stratum_v', 'u'))\n    setkeyv(DT, c('cellID', 'parID', 'nMNO', 'nReg', 'lambda', 'Stratum_u', 'Stratum_v'))\n\n  }\n\n  if (f1[[1L]] == 'degen'){\n\n    u0 <- f1[['x0']]\n    if (length(u0) != 1 & length(u0) != nCells) stop('The number of parameters in the distribution f1 does not coincide with the number of cells.')\n    if (any(u0 < 0 | u0 > 1)) stop('The parameter(s) x0 in the distribution f1 must belong to the unit interval (0,1).')\n\n    DT[, u := rep(u0, each = dim(DT)[1] / nCells)]\n    DT <- DT[, c('cellID', 'parID', 'nMNO', 'nReg', 'lambda', 'Stratum_u', 'Stratum_v', 'u'), with = FALSE]\n    setcolorder(DT, c('cellID', 'parID', 'nMNO', 'nReg', 'lambda', 'Stratum_u','Stratum_v', 'u'))\n    setkeyv(DT, c('cellID', 'parID', 'nMNO', 'nReg', 'lambda', 'Stratum_u', 'Stratum_v'))\n  }\n\n  if (f1[[1L]] == 'triang') {\n\n    uMin <- f1[['xMin']]\n    if (any(uMin < 0)) stop('The parameters xMin in the distribution f1 cannot be negative.')\n    if (any(uMin >= 1)) stop('The parameters xMin in the distribution f1 cannot be equal to or larger than 1.')\n    if (length(uMin) != 1 & length(uMin) != nCells) stop('The number of parameters uMin in the distribution f1 does not coincide with the number of cells.')\n    if (length(uMin) == nCells) uMin <- rep(uMin, each = dim(DT)[1] / nCells)\n    DT[, uMin := uMin]\n\n    uMax <- f1[['xMax']]\n    if (length(uMax) != 1 & length(uMax) != nCells) stop('The number of parameters uMax in the distribution f1 does not coincide with the number of cells.')\n    if (any(uMax < 0)) stop('The parameters uMax in the distribution f1 cannot be negative.')\n    if (any(uMax >= 1)) stop('The parameters uMax in the distribution f1 cannot be larger than 1.')\n    if (length(uMax) == nCells) uMax <- rep(uMax, each = dim(DT)[1] / nCells)\n    if (any(uMin >= uMax)) stop('The parameters uMin in the distribution f1 must be lesser than the parameters uMax.')\n    DT[, uMax := uMax]\n\n    uMode <- f1[['xMode']]\n    if (length(uMode) != 1 & length(uMode) != nCells) stop('The number of parameters uMode in the distribution f1 does not coincide with the number of cells.')\n    if (any(uMode < 0)) stop('The parameters uMode in the distribution f1 cannot be negative.')\n    if (any(uMode >= 1)) stop('The parameters uMode in the distribution f1 cannot be larger than 1.')\n    if (length(uMode) == nCells) uMode <- rep(uMode, each = dim(DT)[1] / nCells)\n    if (any(uMode >= uMax)) stop('The parameters uMode in the distribution f1 must be lesser than the parameters uMax.')\n    if (any(uMode <= uMin)) stop('The parameters uMode in the distribution f1 must be greater than the parameters uMin.')\n    DT[, uMode := uMode]\n\n    Strata <- DT[, list(u0 = runif(floor(nSim/prod(nStrata)))), by = c('Stratum_u', 'Stratum_v')]\n    DT <- merge(DT, Strata, by = c('Stratum_u', 'Stratum_v'), allow.cartesian = TRUE)\n    DT[, u := qtriang( (u0 + Stratum_u - 1)/nStrata[1], uMin, uMax, uMode)]\n    DT <- DT[, c('cellID', 'parID', 'nMNO', 'nReg', 'lambda', 'Stratum_u', 'Stratum_v', 'u'), with = FALSE]\n    setcolorder(DT, c('cellID', 'parID', 'nMNO', 'nReg', 'lambda', 'Stratum_u','Stratum_v', 'u'))\n    setkeyv(DT, c('cellID', 'parID', 'nMNO', 'nReg', 'lambda', 'Stratum_u', 'Stratum_v'))\n  }\n\n  if (f2[[1L]] == 'degen') {\n\n    v0 <- f2[['x0']]\n    if (length(v0) != 1 & length(v0) != nCells) stop('The number of parameters in the distribution f2 does not coincide with the number of cells.')\n\n    DT[, v := rep(v0, each = dim(DT)[1] / nCells)]\n    DT <- DT[, c('cellID', 'parID',  'nMNO', 'nReg', 'lambda', 'Stratum_u', 'Stratum_v', 'u', 'v'), with = FALSE]\n    setcolorder(DT, c('cellID', 'parID',  'nMNO', 'nReg', 'lambda', 'Stratum_u', 'Stratum_v', 'u', 'v'))\n    setkeyv(DT, c('cellID', 'parID',  'nMNO', 'nReg', 'lambda', 'Stratum_u', 'Stratum_v'))\n\n  }\n\n  if (f2[[1L]] == 'unif') {\n\n    vMin <- f2[['xMin']]\n    if(any(vMin < 0)) stop('The parameters xMin in the distribution f2 cannot be negative.')\n    if (length(vMin) != 1 & length(vMin) != nCells) stop('The number of parameters xMin in the distribution f2 does not coincide with the number of cells.')\n    if (length(vMin) == nCells) vMin <- rep(vMin, each = dim(DT)[1] / nCells)\n    DT[, vMin := vMin]\n\n    vMax <- f2[['xMax']]\n    if (length(vMax) != 1 & length(vMax) != nCells) stop('The number of parameters vMax in the distribution f2 does not coincide with the number of cells.')\n    if(any(vMax < 0)) stop('The parameters vMax in the distribution f2 cannot be negative.')\n    if (length(vMax) == nCells) vMax <- rep(vMax, each = dim(DT)[1] / nCells)\n    if(any(vMin >= vMax)) stop('The parameters vMin in the distribution f2 must be lesser than the parameters xMax.')\n    DT[, vMax := vMax]\n\n    DT[, v0 := runif(dim(DT)[1])]\n    DT[, v := vMin + v0 * (vMax - vMin)]\n    DT <- DT[, c('cellID', 'parID',  'nMNO', 'nReg', 'lambda', 'Stratum_u', 'Stratum_v', 'u', 'v'), with = FALSE]\n\n    setcolorder(DT, c('cellID', 'parID', 'nMNO', 'nReg', 'lambda', 'Stratum_u', 'Stratum_v', 'u', 'v'))\n    setkeyv(DT, c('cellID', 'parID', 'nMNO', 'nReg', 'lambda', 'Stratum_u', 'Stratum_v'))\n\n  }\n\n  if (f2[[1L]] == 'triang') {\n\n    vMin <- f2[['xMin']]\n    if(any(vMin < 0)) stop('The parameters xMin in the distribution f2 cannot be negative.')\n    if (length(vMin) != 1 & length(vMin) != nCells) stop('The number of parameters xMin in the distribution f2 does not coincide with the number of cells.')\n    if (length(vMin) == nCells) vMin <- rep(vMin, each = dim(DT)[1] / nCells)\n    DT[, vMin := vMin]\n\n    vMax <- f2[['xMax']]\n    if (length(vMax) != 1 & length(vMax) != nCells) stop('The number of parameters vMax in the distribution f2 does not coincide with the number of cells.')\n    if(any(vMax < 0)) stop('The parameters vMax in the distribution f2 cannot be negative.')\n    if (length(vMax) == nCells) vMax <- rep(vMax, each = dim(DT)[1] / nCells)\n    if(any(vMin >= vMax)) stop('The parameters vMin in the distribution f2 must be lesser than the parameters xMax.')\n    DT[, vMax := vMax]\n\n    vMode <- f2[['xMode']]\n    if (length(vMode) != 1 & length(vMode) != nCells) stop('The number of parameters xMode in the distribution f2 does not coincide with the number of cells.')\n    if(any(vMode < 0)) stop('The parameters vMode in the distribution f2 cannot be negative.')\n    if (length(vMode) == nCells) vMode <- rep(vMode, each = dim(DT)[1] / nCells)\n    if(any(vMode >= vMax)) stop('The parameters vMode in the distribution f2 must be lesser than the parameters vMax.')\n    if(any(vMode <= vMin)) stop('The parameters vMode in the distribution f2 must be greater than the parameters vMin.')\n    DT[, vMode := vMode]\n\n    DT[, v0 := runif(dim(DT)[1])]\n    DT[, v := qtriang((v0 + Stratum_v - 1 ) / nStrata[2], vMin, vMax, vMode)]\n    DT <- DT[, c('cellID', 'parID',  'nMNO', 'nReg', 'lambda', 'Stratum_u', 'Stratum_v', 'u', 'v'), with = FALSE]\n\n    setcolorder(DT, c('cellID', 'parID', 'nMNO', 'nReg', 'lambda', 'Stratum_u', 'Stratum_v', 'u', 'v'))\n    setkeyv(DT, c('cellID', 'parID', 'nMNO', 'nReg', 'lambda', 'Stratum_u', 'Stratum_v'))\n\n  }\n\n  if (f2[[1L]] == 'gamma'){\n\n    shape <- f2[['shape']]\n    if(any(shape < 0)) stop('The parameter(s) shape in the distribution f2 cannot be negative.')\n    if (length(shape) != 1 & length(shape) != nCells) stop('The number of parameters shape in the distribution f2 does not coincide with the number of cells.')\n    if (length(shape) == nCells) shape <- rep(shape, each = dim(DT)[1] / nCells)\n    DT[, shape := shape]\n\n    scale <- f2[['scale']]\n    if (length(scale) != 1 & length(scale) != nCells) stop('The number of parameter(s) scale in the distribution f2 does not coincide with the number of cells.')\n    if(any(scale < 0)) stop('The parameter(s) scale in the distribution f2 cannot be negative.')\n    if (length(scale) == nCells) scale <- rep(scale, each = dim(DT)[1] / nCells)\n    DT[, scale := scale]\n\n    DT[, v0 := runif(dim(DT)[1])]\n    DT[, v := qgamma((v0 + Stratum_v - 1 ) / nStrata[2], shape = shape, scale = scale)]\n    DT <- DT[, c('cellID', 'parID', 'nMNO', 'nReg', 'lambda', 'Stratum_u', 'Stratum_v', 'u', 'v'), with = FALSE]\n\n    setcolorder(DT, c('cellID', 'parID', 'nMNO', 'nReg', 'lambda', 'Stratum_u', 'Stratum_v', 'u', 'v'))\n    setkeyv(DT, c('cellID', 'parID', 'nMNO', 'nReg', 'lambda', 'Stratum_u', 'Stratum_v'))\n  }\n\n  return(DT[])\n}\n",
    "created" : 1516948948372.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "386707663",
    "id" : "771663F2",
    "lastKnownWriteTime" : 1516948959,
    "last_content_update" : 1516948959807,
    "path" : "~/pestim/R/genUV.R",
    "project_path" : "R/genUV.R",
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}